<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="cn.jsu.projectmanage.dao.projectManage.GroupDao">

    <insert id="insertGroup" useGeneratedKeys="true" keyProperty="groupId" keyColumn="groupId">
        insert into `group`
                    (group_parent_id, group_name, group_lead)
        values (#{groupParentId}, #{groupName}, #{groupLead});
    </insert>

    <insert id="insertProject" useGeneratedKeys="true" keyProperty="projectId">
        insert into `project`
        (project_name, project_describe, project_group, project_create_time, project_status, project_end_time)
        values (#{projectName}, #{projectDescribe}, #{projectGroup}, DATE_FORMAT(NOW(),"%Y-%m-%d"), #{projectStatus}, #{projectEndTime});
    </insert>

    <insert id="insertGroupUsers" parameterType="cn.jsu.projectmanage.pojo.dto.GroupUser">
        INSERT INTO `group_user`
        (group_id, user_id)
        VALUES
        <foreach collection = "groupUsers" item = "groupUser" separator = ",">
            (#{groupUser.groupId}, #{groupUser.userId})
        </foreach>
    </insert>

    <select id="queryCount" resultType="Integer">
        SELECT count(*)
        FROM `group_user` AS gu
        WHERE gu.`group_id` = #{groupId}
        AND gu.`user_id` IN
        <foreach collection="userIds" open="(" separator="," close=")" item="userId">
            #{userId}
        </foreach>
    </select>

    <delete id="deleteGroupUsers">
        DELETE gu
        FROM `group_user` AS gu
        WHERE gu.`group_id` = #{groupId}
        AND gu.`user_id` IN
        <foreach collection="userIds" open="(" separator="," close=")" item="userId">
            #{userId}
        </foreach>
    </delete>

    <select id="queryProjectById" parameterType="Integer" resultType="cn.jsu.projectmanage.pojo.dto.Project">
        SELECT p.`project_id`, p.`project_name`, p.`project_describe`, p.`project_group`, p.`project_create_time`, p.`project_status`, p.`project_end_time`
        FROM `project` AS p
        WHERE p.`project_id` = #{projectId}
    </select>

    <select id="queryProjectAll" resultType="cn.jsu.projectmanage.pojo.dto.Project">
        SELECT p.`project_id`, p.`project_name`, p.`project_describe`, p.`project_group`, p.`project_create_time`, p.`project_status`, p.`project_end_time`
        FROM `project` AS p
        <if test="pageOffset != null and limit != null">
            LIMIT #{pageOffset},#{limit}
        </if>
    </select>

    <select id="count3" resultType="Integer">
        SELECT count(*)
        FROM `project` AS p
        <if test="pageOffset != null and limit != null">
            LIMIT #{pageOffset},#{limit}
        </if>
    </select>


    <select id="queryGroupById" parameterType="Integer" resultType="cn.jsu.projectmanage.pojo.dto.Group">
        SELECT g.`group_id`, g.`group_parent_id`, g.`group_name`, g.`group_lead`
        FROM `group` AS g
        WHERE g.`group_id` = #{groupId}
    </select>

    <update id="updateGroupName">
        UPDATE `group` AS g
        SET g.`group_name` = #{groupName}
        WHERE g.`group_id` = #{groupId}
    </update>


    <select id="queryGroupByGroup" parameterType="Integer" resultType="cn.jsu.projectmanage.pojo.dto.Group">
        SELECT g.`group_id`, g.`group_parent_id`, g.`group_name`, g.`group_lead`
        FROM `group` AS g
        WHERE g.`group_parent_id` = #{groupId}
    </select>

    <update id="updateProject">
        UPDATE `project` AS p
        SET
        <if test="project.projectName != null">p.`project_name` = #{project.projectName},</if>
        <if test="project.projectDescribe != null">p.`project_describe` = #{project.projectDescribe},</if>
        <if test="project.projectEndTime != null">p.`project_end_time` = #{project.projectEndTime}</if>
        WHERE p.`project_id` = #{project.projectId}
    </update>
    
    <select id="queryChildGroupAccount" resultType="Integer">
        SELECT COUNT(*) FROM `group` AS g WHERE g.`group_parent_id` = #{groupId};
    </select>

    <delete id="deleteGroupByGroupId">
        DELETE FROM `group` WHERE group_id = #{groupId}
    </delete>

    <delete id="deleteGroupByGroupIds">
        DELETE FROM `group`
        WHERE `group_id` IN
        <foreach collection="groupIds" open="(" separator="," close=")" item="groupId">
            #{groupId}
        </foreach>
    </delete>

    <delete id="deleteGroupUserByGroupId">
        DELETE FROM `group_user` WHERE group_id = #{groupId}
    </delete>

    <delete id="deleteGroupUserByGroupIds">
        DELETE FROM `group_user`
        WHERE `group_id` IN
        <foreach collection="groupIds" open="(" separator="," close=")" item="groupId">
            #{groupId}
        </foreach>
    </delete>

    <select id="queryChildIdList" parameterType="Integer" resultType="java.lang.Integer">
        SELECT g.`group_id`
        FROM `group` AS g
        WHERE g.`group_parent_id` = #{groupId}
    </select>

    <select id="equryGroupIdByProjectId" resultType="java.lang.Integer">
        SELECT project_group FROM `project` WHERE project_id = #{projectId}
    </select>

    <delete id="deleteProject">
        DELETE FROM `project` WHERE project_id = #{projectId}
    </delete>

    <select id="equryTasksByProjectId" resultType="Integer">
        SELECT task_id FROM `task` WHERE project_id = #{projectId}
    </select>

    <delete id="deleteTaskByProjectId">
        DELETE FROM `task` WHERE project_id = #{projectId}
    </delete>

    <delete id="deleteTaskPoolTaskByGroupId">
        DELETE FROM `task_pool` WHERE task_id IN
        <foreach collection="taskIds" open="(" separator="," close=")" item="taskId">
            #{taskId}
        </foreach>
    </delete>
</mapper>